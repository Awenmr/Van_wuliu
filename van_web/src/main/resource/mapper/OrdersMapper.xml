<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.van.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.van.pojo.Orders">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="order_price" jdbcType="VARCHAR" property="orderPrice" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="apt_id" jdbcType="VARCHAR" property="aptId" />
    <result column="st_id" jdbcType="VARCHAR" property="stId" />
    <result column="g_id" jdbcType="VARCHAR" property="gId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_name, order_price, user_id, apt_id, st_id, g_id
  </sql>
  <select id="selectByExample"  resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" >
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.van.pojo.Orders">
    insert into orders (order_id, order_name, order_price, 
      user_id, apt_id, st_id, 
      g_id)
    values (#{orderId,jdbcType=VARCHAR}, #{orderName,jdbcType=VARCHAR}, #{orderPrice,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{aptId,jdbcType=VARCHAR}, #{stId,jdbcType=VARCHAR}, 
      #{gId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.van.pojo.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderName != null">
        order_name,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="aptId != null">
        apt_id,
      </if>
      <if test="stId != null">
        st_id,
      </if>
      <if test="gId != null">
        g_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="aptId != null">
        #{aptId,jdbcType=VARCHAR},
      </if>
      <if test="stId != null">
        #{stId,jdbcType=VARCHAR},
      </if>
      <if test="gId != null">
        #{gId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderName != null">
        order_name = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.aptId != null">
        apt_id = #{record.aptId,jdbcType=VARCHAR},
      </if>
      <if test="record.stId != null">
        st_id = #{record.stId,jdbcType=VARCHAR},
      </if>
      <if test="record.gId != null">
        g_id = #{record.gId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      order_price = #{record.orderPrice,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      apt_id = #{record.aptId,jdbcType=VARCHAR},
      st_id = #{record.stId,jdbcType=VARCHAR},
      g_id = #{record.gId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.van.pojo.Orders">
    update orders
    <set>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="aptId != null">
        apt_id = #{aptId,jdbcType=VARCHAR},
      </if>
      <if test="stId != null">
        st_id = #{stId,jdbcType=VARCHAR},
      </if>
      <if test="gId != null">
        g_id = #{gId,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.van.pojo.Orders">
    update orders
    set order_name = #{orderName,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      apt_id = #{aptId,jdbcType=VARCHAR},
      st_id = #{stId,jdbcType=VARCHAR},
      g_id = #{gId,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>